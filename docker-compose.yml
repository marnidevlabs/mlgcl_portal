version: "2"

volumes:
  database:

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile-nginx
    container_name: ${PROJECT_NAME}_nginx
    volumes:
      - ./docker/nginx/${ENVIRONMENT}.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    environment:
      TZ: ${TIMEZONE}
    links:
      - mysql:mysql
      - php:php
    volumes_from:
      - data

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile-php
    container_name: ${PROJECT_NAME}_php
    volumes_from:
      - data
    working_dir: /var/www/backend
    ports:
      - "9000:9000"
    environment:
      TZ: ${TIMEZONE}
    links:
      - mysql:mysql

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile-mysql
    command:
      [
        "--character-set-server=utf8",
        "--collation-server=utf8_unicode_ci",
        "default-authentication-plugin=mysql_native_password",
      ]
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TIMEZONE}
    volumes:
      - ./docker/mysql/scripts:/docker-entrypoint-initdb
      - database:/var/lib/mysql

  cron:
    build:
      context: .
      dockerfile: ./docker/cron/Dockerfile-cron
    container_name: ${PROJECT_NAME}_cron
    volumes_from:
      - data
    working_dir: /var/www/backend
    environment:
      TZ: ${TIMEZONE}
    links:
      - mysql:mysql

  data:
    image: tianon/true
    container_name: ${PROJECT_NAME}_data
    volumes:
      - ./src/backend:/var/www/backend
      - ./src/frontend:/var/www/frontend
    environment:
      TZ: ${TIMEZONE}
    tty: true
